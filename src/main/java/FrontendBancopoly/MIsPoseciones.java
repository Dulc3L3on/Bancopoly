/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontendBancopoly;

import Jugadores.Jugador;
import Partida.DesarrolloPartida;
import RegistroYManejoTemporalDatos.ManejoPosesionesJugador;
import javax.swing.*;

/**
 *
 * @author phily
 */
public class MIsPoseciones extends javax.swing.JDialog {
    private ManejoPosesionesJugador manejadorPoseciones;
    private Jugador[] jugadores;
    private int turnoActual;
    static public JSpinner[] spinnerTransacciones= new JSpinner[4];
    static public JComboBox<String> ListadoHipotecar;
    static public JComboBox<String> ListadoDeshipotecar;
    static public JComboBox<String> listado_servicios;
    static public JComboBox<String> listado_estaciones;
    static public JSpinner spinnerTransferencia;
    static public JComboBox<String> listadoJugadoresPosibles;
    static public  JRadioButton botonTransferencia;   
    
    Tablero tablaJugadores;
    
    /**
     * Creates new form MIsPoseciones
     */
    public MIsPoseciones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }
    
    public void recibirJugadores(Tablero tablero){//primero antes de visulizar diálogo
        spinnerTransacciones[0]=spn_compraSimples;
        spinnerTransacciones[1]=spn_compraSofisticadas;
        spinnerTransacciones[2]=spn_ventaConstruccion;
        spinnerTransacciones[3]=spn_ventaTarjeta;//esto evitará tener que crear un método para modificar sus valores, pues se tendrá acceso directo a estos componentes xD, gracias Dios xD
        
        ListadoHipotecar=cbBx_hipotecar;
        ListadoDeshipotecar=cbBx_Deshipotecar;
        listado_servicios=cbBx_servicios;
        listado_estaciones=cbBx_estaciones;
        
        spinnerTransferencia=spn_transferencia;
        listadoJugadoresPosibles=cbBx_jugadoresPosibles;
        
        botonTransferencia=Rbtn_transferencia;
                
        manejadorPoseciones=new ManejoPosesionesJugador(DesarrolloPartida.jugadores);//la verdad no sería necesario que el ctrct pida a los jug, puesto que ahora son static  
        jugadores=DesarrolloPartida.jugadores;//Solo modificase el hecho de recibir a los jug puesto que lo harás
        //directamtente desde la clase, entonces lo que deberás revisar es si se hace ref a otro listadoJugadores o se mantiene, si se mantien todo estará muy bien [la verdad eso debería suceder xD] sino entonces en cada llamada a esta var de jug creada en esta clase, deberá ser susti por la llamada a la clase ylos jugadores en cuestió
        tablaJugadores=tablero;
    }
    
    public void recibirTurnoActual(int turno){//lo recibirá de partida, tal y como lo hace el diálogo
        turnoActual=turno;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup_transacciones = new javax.swing.ButtonGroup();
        btnGroup_compraVenta = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_subgrupos = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        btn_mostrarListaSitios = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_sitios = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_transferir = new javax.swing.JButton();
        spn_compraSimples = new javax.swing.JSpinner();
        ckBx_compra = new javax.swing.JCheckBox();
        ckBx_venta = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        Rbtn_hipotecar = new javax.swing.JRadioButton();
        btn_aceptarTransaccion = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbBx_servicios = new javax.swing.JComboBox<>();
        cbBx_estaciones = new javax.swing.JComboBox<>();
        spn_compraSofisticadas = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbBx_hipotecar = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        spn_ventaConstruccion = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        spn_ventaTarjeta = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        Rbtn_deshipotecar = new javax.swing.JRadioButton();
        cbBx_jugadoresPosibles = new javax.swing.JComboBox<>();
        spn_transferencia = new javax.swing.JSpinner();
        cbBx_Deshipotecar = new javax.swing.JComboBox<>();
        Rbtn_transferencia = new javax.swing.JRadioButton();
        txtF_construcciones = new javax.swing.JTextField();
        ckBx_grupoTransacciones1 = new javax.swing.JCheckBox();
        ckBx_procesoHIpotecario = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mis poseciones\n");
        setBackground(new java.awt.Color(220, 213, 205));
        setMaximumSize(new java.awt.Dimension(901, 536));
        setMinimumSize(new java.awt.Dimension(901, 536));
        setName("dlg_Poseciones"); // NOI18N
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Sawasdee", 1, 24)); // NOI18N
        jLabel1.setText("<<MIS POSECIONES>>");

        jScrollPane1.setViewportView(lst_subgrupos);

        jLabel2.setFont(new java.awt.Font("Sawasdee", 1, 15)); // NOI18N
        jLabel2.setText("GRUPOS");

        btn_mostrarListaSitios.setText(">>");
        btn_mostrarListaSitios.setEnabled(false);
        btn_mostrarListaSitios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mostrarListaSitiosActionPerformed(evt);
            }
        });

        lst_sitios.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lst_sitiosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lst_sitios);

        jLabel3.setFont(new java.awt.Font("Sawasdee", 1, 15)); // NOI18N
        jLabel3.setText("SITIOS");

        jLabel4.setFont(new java.awt.Font("Sawasdee", 0, 15)); // NOI18N
        jLabel4.setText("CONSTRUCCIONES");

        btn_transferir.setText(">>");

        spn_compraSimples.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spn_compraSimples.setEnabled(false);
        spn_compraSimples.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_compraSimplesStateChanged(evt);
            }
        });

        btnGroup_compraVenta.add(ckBx_compra);
        ckBx_compra.setFont(new java.awt.Font("Sawasdee", 0, 15)); // NOI18N
        ckBx_compra.setText("COMPRAR");
        ckBx_compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBx_compraActionPerformed(evt);
            }
        });

        btnGroup_compraVenta.add(ckBx_venta);
        ckBx_venta.setFont(new java.awt.Font("Sawasdee", 0, 15)); // NOI18N
        ckBx_venta.setText("VENDER");
        ckBx_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBx_ventaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        jLabel5.setText("-> SERVICIOS");

        Rbtn_hipotecar.setText("HIPOTECAR");
        Rbtn_hipotecar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Rbtn_hipotecarMouseClicked(evt);
            }
        });
        Rbtn_hipotecar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rbtn_hipotecarActionPerformed(evt);
            }
        });

        btn_aceptarTransaccion.setText("Aceptar Transacción");
        btn_aceptarTransaccion.setEnabled(false);
        btn_aceptarTransaccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarTransaccionActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        jLabel6.setText("-> LUGARES");
        jLabel6.setName(""); // NOI18N

        spn_compraSofisticadas.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spn_compraSofisticadas.setEnabled(false);
        spn_compraSofisticadas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_compraSofisticadasStateChanged(evt);
            }
        });

        jLabel7.setText("Simples");

        jLabel8.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        jLabel8.setText("-> ESTACIONES");

        cbBx_hipotecar.setEnabled(false);

        jLabel9.setText("Sofisticadas");

        spn_ventaConstruccion.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spn_ventaConstruccion.setEnabled(false);

        jLabel10.setText("Construccion");

        jLabel11.setText("Tarjeta");

        spn_ventaTarjeta.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spn_ventaTarjeta.setEnabled(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        Rbtn_deshipotecar.setText("DESHIPOTECAR ");
        Rbtn_deshipotecar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rbtn_deshipotecarActionPerformed(evt);
            }
        });

        cbBx_jugadoresPosibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBx_jugadoresPosiblesActionPerformed(evt);
            }
        });

        spn_transferencia.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        cbBx_Deshipotecar.setEnabled(false);

        Rbtn_transferencia.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        Rbtn_transferencia.setText("TRANSFERENCIA TARJETA");
        Rbtn_transferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rbtn_transferenciaActionPerformed(evt);
            }
        });

        txtF_construcciones.setEditable(false);
        txtF_construcciones.setText(" ");

        btnGroup_transacciones.add(ckBx_grupoTransacciones1);
        ckBx_grupoTransacciones1.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        ckBx_grupoTransacciones1.setText("COMPRA VENTA");
        ckBx_grupoTransacciones1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBx_grupoTransacciones1ActionPerformed(evt);
            }
        });

        btnGroup_transacciones.add(ckBx_procesoHIpotecario);
        ckBx_procesoHIpotecario.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        ckBx_procesoHIpotecario.setText("PROCESO HIPOTECARIO");
        ckBx_procesoHIpotecario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBx_procesoHIpotecarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cbBx_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_mostrarListaSitios)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtF_construcciones, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cbBx_hipotecar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(Rbtn_hipotecar))
                                                .addGap(3, 3, 3))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(spn_transferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(29, 29, 29)
                                                .addComponent(btn_transferir)
                                                .addGap(36, 36, 36)))
                                        .addComponent(cbBx_jugadoresPosibles, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(Rbtn_transferencia)
                                        .addGap(119, 119, 119))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(169, 169, 169)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(103, 103, 103)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(ckBx_compra)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel7)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(spn_compraSimples, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel9)
                                                                .addGap(31, 31, 31)
                                                                .addComponent(spn_compraSofisticadas, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(67, 67, 67)
                                                        .addComponent(ckBx_grupoTransacciones1)))
                                                .addGap(44, 44, 44))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(146, 146, 146)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ckBx_venta)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel11)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(spn_ventaTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel10)
                                                            .addGap(25, 25, 25)
                                                            .addComponent(spn_ventaConstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(Rbtn_deshipotecar)
                                                        .addComponent(cbBx_Deshipotecar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                .addContainerGap(24, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(224, 224, 224)
                                .addComponent(cbBx_estaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(342, 342, 342)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_aceptarTransaccion)
                                .addGap(129, 129, 129))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(ckBx_procesoHIpotecario)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btn_mostrarListaSitios)))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtF_construcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBx_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBx_estaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(ckBx_grupoTransacciones1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckBx_compra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckBx_venta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(spn_ventaConstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spn_compraSimples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(spn_ventaTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(spn_compraSofisticadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Rbtn_transferencia)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_transferir)
                            .addComponent(spn_transferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbBx_jugadoresPosibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ckBx_procesoHIpotecario)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rbtn_deshipotecar)
                            .addComponent(Rbtn_hipotecar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbBx_hipotecar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbBx_Deshipotecar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(btn_aceptarTransaccion)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Rbtn_hipotecarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rbtn_hipotecarActionPerformed
        if(Rbtn_hipotecar.isSelected()){            
            btn_aceptarTransaccion.setEnabled(true);     
            cbBx_hipotecar.setEnabled(true);               
            //Aquí no iría un allamada a lo inicial puesto que lo inicial no cb  hasta que se realizce una transacción, de esta forma se mantienen los datos actualizados al establecer desde 0, depués de hager seleccionado alguna transacción
        }else{
          //mejor ahora lo que se hará será colocar el grupo de botones en una jerarquía mayor además del grupo de jerarquí menor
          btn_aceptarTransaccion.setEnabled(false);//mas o menos porque le daría como lím max 0 y pues no podría hacer nada, creo que con ese lím no se activa...
          cbBx_hipotecar.setEnabled(false);//este bloque de código es para implementar nuestro propio comprameitno para el cbBx          
        }
    }//GEN-LAST:event_Rbtn_hipotecarActionPerformed

    private void Rbtn_deshipotecarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rbtn_deshipotecarActionPerformed
        if(Rbtn_deshipotecar.isSelected()){
            cbBx_Deshipotecar.setEnabled(true);
               btn_aceptarTransaccion.setEnabled(true);
        }else{
            cbBx_Deshipotecar.setEnabled(false);
               btn_aceptarTransaccion.setEnabled(false);
        }//solo estos son los que al inicio si se habi o deshabi dependiendo de su cdad de items
    }//GEN-LAST:event_Rbtn_deshipotecarActionPerformed

    private void btn_mostrarListaSitiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mostrarListaSitiosActionPerformed
        manejadorPoseciones.formarListadoDeLugaresDelSubgrupoSeleccionado((String)lst_subgrupos.getSelectedValue(), turnoActual);
        lst_sitios.removeAll();
        if(manejadorPoseciones.retornarListadoLugaresHallados()!=null){
            lst_sitios.setListData(manejadorPoseciones.retornarListadoLugaresHallados());//no creo que se necesite el for... o sí?, es que le estoy mandando el listado y por ello veo innecesario el for de abajito...
            lst_sitios.updateUI();
        }
        
    }//GEN-LAST:event_btn_mostrarListaSitiosActionPerformed

    private void lst_sitiosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lst_sitiosValueChanged
        manejadorPoseciones.hallarConstruccionCorrespondiente((String)lst_sitios.getSelectedValue());        
        txtF_construcciones.setText(manejadorPoseciones.retornarConstruccionesHalladas());
        
        System.out.println("está completo el grupo? "+manejadorPoseciones.estaCompletoElGrupo());
        if(!manejadorPoseciones.estaCompletoElGrupo()){//con esto se evita que acceda a las compras cuando no está cumplida la condi de que el grupo esté completo
//            if(ckBx_compra.isEnabled()){
//                ckBx_compra.setSelected(false);//recuerda que debes buscar como deseleccionar, puesto que eso e lo que esta línea debería hacer pero no lo hace
                reestablecerIngresosParaCompra();
//                ckBx_compra.setEnabled(false); //Aqunque no sería necesario, por el hecho de que al seleccionarlo no tendrá nada que hacer porque ambos serán 0 y por ello al efectuar la transacc [si es que la hace] no se tomará en cta porque ambos están deshabi[o 0 dependiendo de si resulte eficaz... bien], lo cual no debe suceder               
        //    }//pues si está deshabilitado para que quiero hacerlo otra vez, pues si lo está se encuentra con el estado correcto por lo cual no es nec reestablecerlo, ya que la única parte que afecta de esa manera la botón es esta, así que no pueden haber confusiones, respecto a ello
            }
//                    else{
//            if(!ckBx_compra.isEnabled()){
//                ckBx_compra.setEnabled(true);//solo esto requiero hacer puesto que al deshabilitarlo se hace que se deahabilite de la forma correcta, es decir reestablecido xD
//            }else{//en cambio aquí si debo hacerlo si está seleccionado sino no, porque ya se ha reestablecido, ya sea porque así estaba sin seleccionar o porque lo hicieron, de ambas maneras se reestablece de forma correcta
//                if(ckBx_compra.isSelected()){//para que no haya confusiones con los datos de un lugar con otro, pues posiblemente las situaciones sean diferentes para cada uno... de forma similar para venta
//                    ckBx_compra.setSelected(false);
//                    reestablecerIngresosParaCompra();
//                }
//            }            
//        }        
    }//GEN-LAST:event_lst_sitiosValueChanged

    private void btn_aceptarTransaccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarTransaccionActionPerformed
            //lamas al método que se encarga de hacer el cálculo de la transacción, dependiento de la selección del btn, serán if's así que podrá hacerse para varios de una vez xD
            efectuarTransacciones();//Aquí haces la transacción debida y mandas a mostrar de una vez el dialoguito y haces los debidos cb al jugador
                                    
            //llamar al método para reestablecer los datos mostrados y así, pueda hacer la siguiente transacción con los datos actualizados, sea que acepte o decline al final la transacción
            reestablecerIngresosParaCompra();        
            reestablecerEstadoParaHipotecas();
            //invocas al método para actualizar la tabla de jugadores
            
            //Aquí se llamará al método que se encarará de enviar los datos corerspondientes al listado de hipotecas, dependiendo de cual haya sido, comprar o vender, pero eso ya lo revisará el método compuesto aquí llamado
            manejadorPoseciones.establecerListadoHIpotecas(turnoActual);//pues cada transacción requiere actualización, aunque podría esar en el método de fectuar transacción..
            Tablero.actualizarDatosTablaTurno();//para actualizar los datos
    }//GEN-LAST:event_btn_aceptarTransaccionActionPerformed

    private void ckBx_compraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBx_compraActionPerformed
        if(ckBx_compra.isSelected()){//Se procederá a hacer el proceso de búsqueda [más que todo de asignación pues la búsqueda solo será para las ctrcc puesto que ya se guardaron en otras var los nodos correspondientes a las selecciones lo cual hace que la búsqueda de los datos requeridos se muchísimo más directa], para el muestreo de los datos de los spinner según sea la situación para este lugar en particular
            btn_aceptarTransaccion.setEnabled(true);            
            manejadorPoseciones.establecerCondicionesInicialesDeCompra();//Aquí se hace el proceso necesario para que los spinner tengan los datos correspondientes, tanto al lugar como a la transacción actuales            
        }else{
            reestablecerIngresosParaCompra();//esto se app para cuando comiencen con la clickeadera del btn xD           
            btn_aceptarTransaccion.setEnabled(false);            
        }        
    }//GEN-LAST:event_ckBx_compraActionPerformed

    private void spn_compraSimplesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_compraSimplesStateChanged
           //se manda a llamar al método que cambia el comportamiento del otro spn[es decir el de sofisticadas] según los cb del momento
           manejadorPoseciones.establecerReacciónSegunAdquisicionDeSimples();//sino llegara afuncionar, a de ser por que el evento no es el adecuado [solo se exe la primera vez, sin excep, si fuera esto ant]
    }//GEN-LAST:event_spn_compraSimplesStateChanged

    private void spn_compraSofisticadasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_compraSofisticadasStateChanged
            manejadorPoseciones.establecerReaccionSegunAdquisicionDeSofisticadas();
    }//GEN-LAST:event_spn_compraSofisticadasStateChanged

    private void Rbtn_hipotecarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Rbtn_hipotecarMouseClicked
        /*if(evt.getClickCount()%2==0){
            cbBx_hipotecar.setEnabled(false);
        }else{
            cbBx_hipotecar.setEnabled(true);//así de esta manera se hace que pueda
        }*///este por si acaso no llegas a averiguar como se hace para que se deseleccione cuando está en un btn group
    }//GEN-LAST:event_Rbtn_hipotecarMouseClicked

    private void ckBx_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBx_ventaActionPerformed
         if(ckBx_venta.isSelected()){//Se procederá a hacer el proceso de búsqueda [más que todo de asignación pues la búsqueda solo será para las ctrcc puesto que ya se guardaron en otras var los nodos correspondientes a las selecciones lo cual hace que la búsqueda de los datos requeridos se muchísimo más directa], para el muestreo de los datos de los spinner según sea la situación para este lugar en particular
            btn_aceptarTransaccion.setEnabled(true);            
            //aquí se haceel llamado al método que se encarga de establecer los datos iniciales de manera similar a lo que compra hace
            manejadorPoseciones.establecerCOndicionesInicialesDeVenta(turnoActual);
        }else{
            //aquí se reestablcen los datos, claro si es que resulta necesario
            btn_aceptarTransaccion.setEnabled(false); 
        }        
        
        //reucerda que a esto métodos solo les interesa encargarse de sus propieo líos xD, los btn group de jerarquía mayor son los que se encargan de los líos grupales xD
    }//GEN-LAST:event_ckBx_ventaActionPerformed

    private void Rbtn_transferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rbtn_transferenciaActionPerformed
        if(Rbtn_transferencia.isSelected()){//sin tanto revoltijo se maneja a sí mismo y evita errores, sin necesidad de dehabilitarse,[exceptoo cuando se seleccione uno de los dos grupo de jerarquía >
            manejadorPoseciones.establecerCondicionesInicialesTransferenciaTarjetas(turnoActual);
            btn_aceptarTransaccion.setEnabled(true);
           // spinnerTransferencia.setModel(new javax.swing.SpinnerNumberModel(null, 0, DesarrolloPartida.jugadores[turnoActual].obtenerListadoTarjetasSC().darTamanio(),1));            
        }        
        if(Rbtn_transferencia.isSelected() && !cbBx_jugadoresPosibles.isEnabled()){//si sucede algo locachon mejor dejalo como antes de todos modos no es fundamental
            btn_aceptarTransaccion.setEnabled(false);
        }//este cada vez que se seleccione aunque no se rellene el botoncito, exe lo del if
    }//GEN-LAST:event_Rbtn_transferenciaActionPerformed

    private void ckBx_grupoTransacciones1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBx_grupoTransacciones1ActionPerformed
        if(ckBx_grupoTransacciones1.isSelected()){       
                ckBx_compra.setEnabled(true);//no es necesario revisar si los deba habilitar o no según la situación de la propiedad, por el hecho de que esas condi afectan a los 
                ckBx_venta.setEnabled(true);//spiner mas no a los btns, que en este caso al ser deshabi solo se impide se evalúe las condis y con ello se realice la transacción, esto hasta que se vuelvan a habilitar           
        }else{
                ckBx_compra.setEnabled(false);
                ckBx_venta.setEnabled(false);
        }
    }//GEN-LAST:event_ckBx_grupoTransacciones1ActionPerformed

    private void cbBx_jugadoresPosiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBx_jugadoresPosiblesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBx_jugadoresPosiblesActionPerformed

    private void ckBx_procesoHIpotecarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBx_procesoHIpotecarioActionPerformed
        if(ckBx_procesoHIpotecario.isSelected()){       
                cbBx_hipotecar.setEnabled(true);
                cbBx_Deshipotecar.setEnabled(true);
        }else{
                cbBx_hipotecar.setEnabled(false);
                cbBx_Deshipotecar.setEnabled(false);
        }
    }//GEN-LAST:event_ckBx_procesoHIpotecarioActionPerformed

    public void establecerDatosDeListaSubgrupos(){//2do antes de hacer visible al diálogo, puesto que no hay botón para ello xD, y así debe ser para comenzar bien xD
        manejadorPoseciones.limpiarDatosTemporales();//para que cuando quiera mostrar no lo haga por el hecho de no poseer nadita xD, luego de haber pasado por un jugador que sí tenía algo
        manejadorPoseciones.formarListadoSubgrupos(turnoActual);
        manejadorPoseciones.formarListadoServicios(turnoActual);
        manejadorPoseciones.formarListadoEstaciones(turnoActual);//Estos últimos 2 no requieren if's puesto que manipulan directamente los cbBx, entonces al saber que está vacía no les hacen ningun cb
        
        if(manejadorPoseciones.retornarListadosSubgruposHallados()!=null){//crei que esta condi es la que perjufica, pero,,, antes se procedió ha hallarlos..JUSTO AQUÍ ESTA ESA CONDI, LO CUAL POR SER PARA LA DE LOS SUBGRUPOS PERMITE QUE LAS OTRAS SE EXE, Lo que no se es porque se muestran si de todos modos se trabaja a base del turno actual, esdiecir que aunque esta tuviera algo no debería mostrar nada en los otros cuando ese otro jugador no tenga nada.
            String[] listadoGrupos=manejadorPoseciones.retornarListadosSubgruposHallados();
            btn_mostrarListaSitios.setEnabled(true);
            
            for(int elemento=0; elemento<listadoGrupos.length; elemento++){
                lst_subgrupos.setListData(listadoGrupos);//no creo sea necesario, por el hecho e que se le envió la lista, entonces yo asumo que tiene un bucle ese método
            }            
        }//Aquí se add los respectivos subgrupos       
        //else{
          //  lst_subgrupos.removeAll();
        //}
        
        if(cbBx_hipotecar.getItemCount()>0){//quiere decir que tiene items
            Rbtn_hipotecar.setEnabled(true);
        }
        
        if(cbBx_Deshipotecar.getItemCount()>0){
            Rbtn_deshipotecar.setEnabled(true);
        }
        
        
    }        
    
    public void efectuarTransacciones(){
        if(ckBx_compra.isSelected()){//aquí iría la revisión de si ambos son != 0 para no hacer esto
            if(spn_compraSimples.isEnabled() || spn_compraSofisticadas.isEnabled()){
                manejadorPoseciones.establecerDetalleCompra(turnoActual);
            }            
        }else{//Aquí iría lo de compras
            if(ckBx_venta.isSelected()){
                if(spn_ventaConstruccion.isEnabled() || spn_ventaTarjeta.isEnabled()){//pues con cualquiera de los 2 vale
                    manejadorPoseciones.establecerDetalleVenta(turnoActual);//aún no está completo, a y debes manejar el hecho de habi y deshabi el btn de hipotecar cuando compre, ó eliminar y add el ele en cuestió cuando selec y deselect el cjBx de compra
                }                
            }//estos if lo hago por el hecho de que poseen un bt group por lo cual no pueden deseleccionarse
        }
        if(Rbtn_transferencia.isSelected()){//tarjetas transferencia            
                manejadorPoseciones.realizarTransferenciaTarjeta(turnoActual);            
            //Aqupi no es nec revisar como está el spn cuando está select puesto que si no tiene datos el spn para que se pueda trabajar, se deselect automaticamente así que no hay pena
        }        
        //hipotecar y deshipotecar no, porque ellos son otra cosa, lo cual ya se contempla y manipula correctamente
    }
    
    public void limpiarListados(){//Será llamado antes de establecer los subgrupos
        lst_subgrupos.removeAll();
        lst_sitios.removeAll();
        txtF_construcciones.setText("");
        cbBx_hipotecar.removeAllItems();
        cbBx_Deshipotecar.removeAllItems();
        //lst_sitios.updateUI();
        //lst_subgrupos.updateUI();
         
    }
    
    
    public void reestablecerIngresosParaCompra(){//para que pueda iniciase correctamente el proceso para otro lugar... este proceso será similar para venta
        if(spn_compraSimples.isEnabled()){
            spn_compraSimples.setValue(0);
            spn_compraSimples.setEnabled(false);
        }        
        if(spn_compraSofisticadas.isEnabled()){
            spn_compraSofisticadas.setValue(0);
            spn_compraSofisticadas.setEnabled(false);
        }
    }
    
    public void reestablecerEstadoParaHipotecas(){        
        if(Rbtn_hipotecar.isSelected()){
            Rbtn_hipotecar.setEnabled(false);
            Rbtn_hipotecar.setSelected(false);
            cbBx_Deshipotecar.setEnabled(false);
        }
    
        if(Rbtn_deshipotecar.isSelected()){
            Rbtn_deshipotecar.setEnabled(false);//si esto no desactiva a los cbBx correspondientes se tendrá que volver a especificar..a pesar d estar en el bloque del evt del btn,bueno auqnue pensándolo bien si no lo hace
            //es por el hecho de que funciona solo cuando el btn es clickeado
            Rbtn_deshipotecar.setSelected(false);
            cbBx_hipotecar.setEnabled(false);
        }
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Rbtn_deshipotecar;
    private javax.swing.JRadioButton Rbtn_hipotecar;
    private javax.swing.JRadioButton Rbtn_transferencia;
    private javax.swing.ButtonGroup btnGroup_compraVenta;
    private javax.swing.ButtonGroup btnGroup_transacciones;
    private javax.swing.JButton btn_aceptarTransaccion;
    private javax.swing.JButton btn_mostrarListaSitios;
    private javax.swing.JButton btn_transferir;
    private javax.swing.JComboBox<String> cbBx_Deshipotecar;
    private javax.swing.JComboBox<String> cbBx_estaciones;
    private javax.swing.JComboBox<String> cbBx_hipotecar;
    private javax.swing.JComboBox<String> cbBx_jugadoresPosibles;
    private javax.swing.JComboBox<String> cbBx_servicios;
    private javax.swing.JCheckBox ckBx_compra;
    private javax.swing.JCheckBox ckBx_grupoTransacciones1;
    private javax.swing.JCheckBox ckBx_procesoHIpotecario;
    private javax.swing.JCheckBox ckBx_venta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> lst_sitios;
    private javax.swing.JList<String> lst_subgrupos;
    private javax.swing.JSpinner spn_compraSimples;
    private javax.swing.JSpinner spn_compraSofisticadas;
    private javax.swing.JSpinner spn_transferencia;
    private javax.swing.JSpinner spn_ventaConstruccion;
    private javax.swing.JSpinner spn_ventaTarjeta;
    private javax.swing.JTextField txtF_construcciones;
    // End of variables declaration//GEN-END:variables
}
