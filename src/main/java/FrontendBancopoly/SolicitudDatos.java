/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontendBancopoly;

import BackendBancopoly.BackendTablero;
import RegistroYManejoTemporalDatos.ManejadorDeArchivos;
import BackendBancopoly.Verificacion;
import Jugadores.Jugador;
import RegistroYManejoTemporalDatos.RegistroTemporalDatosPartida;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author phily
 */
public class SolicitudDatos extends javax.swing.JFrame {
    public static BackendTablero logicaDeTablero;    
    public static RegistroTemporalDatosPartida registroDatos;//SOLO ESTÁ AQUÍ  para que él reciba y mande info con los componentes del banner y nada más que con él
    SolicitudDeJugadores dialogoSolicitudJugadores = new SolicitudDeJugadores(new javax.swing.JFrame(), true);
    Tablero tablero;
    public static JPanel paneles[] = new JPanel[3];
        
    boolean hayTiempoLimite;
    boolean esRestringido, estaEnEdicion;
    private Jugador jugadores[];

    /**
     * Creates new form SolicitudDatos
     * @param enEdicion
     */
    public SolicitudDatos(boolean enEdicion) {
        initComponents();
        //this.getContentPane().setBackground(Color.DARK_GRAY);
        estaEnEdicion=enEdicion;
        if(!enEdicion){
            registroDatos = new RegistroTemporalDatosPartida();
        }        
        logicaDeTablero = new BackendTablero(JPn_Contenedor);        
        paneles[0] = JPn_panelEdicion;
        paneles[1] = JPn_panelCreacion;
        paneles[2] = JPn_Contenedor;
        prepararParaEdicion(enEdicion);
        establecerDatosPredefinidos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        btnGroup_conTiempo = new javax.swing.ButtonGroup();
        btnGoup_conOrientacion = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Spn_cantidadDados = new javax.swing.JSpinner();
        Spn_limiteSImples = new javax.swing.JSpinner();
        Spn_limiteSofisticadas = new javax.swing.JSpinner();
        Spn_interesHipoteca = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        Rbtn_hayTiempoLimite = new javax.swing.JRadioButton();
        Rbtn_noHayTiempoLimite = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        Spn_numeroJUgadores = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        ckBx_restringido = new javax.swing.JCheckBox();
        ckBx_libre = new javax.swing.JCheckBox();
        Spn_DineroInicial = new javax.swing.JSpinner();
        Spn_dineroPorVuelta = new javax.swing.JSpinner();
        spn_horas = new javax.swing.JSpinner();
        spn_minutos = new javax.swing.JSpinner();
        spn_segundos = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Spn_filas = new javax.swing.JSpinner();
        Spn_columnas = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        txtF_nombreJuego = new javax.swing.JTextField();
        JPn_panelCreacion = new javax.swing.JPanel();
        btn_customizarMapa = new javax.swing.JButton();
        btn_confirmarTrayectoria = new javax.swing.JButton();
        JPn_panelEdicion = new javax.swing.JPanel();
        btn_Jugar = new javax.swing.JButton();
        btn_Editar = new javax.swing.JButton();
        btn_Cancelar = new javax.swing.JButton();
        JPn_Contenedor = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Solicitud de datos");
        setExtendedState(6);
        setMaximumSize(new java.awt.Dimension(1601, 903));
        setMinimumSize(new java.awt.Dimension(1601, 903));
        setResizable(false);
        setSize(new java.awt.Dimension(1354, 751));

        jPanel1.setBackground(new java.awt.Color(234, 203, 167));

        jLabel2.setText("NUMERO JUGADORES");

        jLabel3.setText("DINERO INICIAL");

        jLabel4.setText("DINERO POR VUELTA");

        jLabel6.setText("CANTIDAD DE DADOS");

        jLabel7.setText("# EDIFICACIONES SIMPLES");

        jLabel8.setText("# EDIFICACIONES LUJOSAS");

        jLabel9.setText("% INTERES POR HIPOTECA");

        Spn_cantidadDados.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        Spn_limiteSImples.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        Spn_limiteSofisticadas.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        Spn_interesHipoteca.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jLabel10.setText("HABRÁ TIEMPO LÍMITE??");

        btnGroup_conTiempo.add(Rbtn_hayTiempoLimite);
        Rbtn_hayTiempoLimite.setText("Si");
        Rbtn_hayTiempoLimite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Rbtn_hayTiempoLimiteItemStateChanged(evt);
            }
        });
        Rbtn_hayTiempoLimite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rbtn_hayTiempoLimiteActionPerformed(evt);
            }
        });

        btnGroup_conTiempo.add(Rbtn_noHayTiempoLimite);
        Rbtn_noHayTiempoLimite.setText("No");
        Rbtn_noHayTiempoLimite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rbtn_noHayTiempoLimiteActionPerformed(evt);
            }
        });

        jLabel11.setText("CUÁNTO??");
        jLabel11.setEnabled(false);

        Spn_numeroJUgadores.setModel(new javax.swing.SpinnerNumberModel(2, 2, 6, 1));

        jLabel19.setText("--JUGADORES--");

        btnGoup_conOrientacion.add(ckBx_restringido);
        ckBx_restringido.setSelected(true);
        ckBx_restringido.setText("MODO RESTRINGIDO");
        ckBx_restringido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBx_restringidoActionPerformed(evt);
            }
        });

        btnGoup_conOrientacion.add(ckBx_libre);
        ckBx_libre.setText("MODO LIBRE");
        ckBx_libre.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckBx_libreStateChanged(evt);
            }
        });
        ckBx_libre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBx_libreActionPerformed(evt);
            }
        });

        Spn_DineroInicial.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        Spn_dineroPorVuelta.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        spn_horas.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spn_horas.setEnabled(false);

        spn_minutos.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));
        spn_minutos.setEnabled(false);

        spn_segundos.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));
        spn_segundos.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Spn_DineroInicial)
                                .addComponent(Spn_numeroJUgadores, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                            .addComponent(Spn_cantidadDados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Spn_dineroPorVuelta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Spn_interesHipoteca, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rbtn_hayTiempoLimite)
                            .addGap(18, 18, 18)
                            .addComponent(Rbtn_noHayTiempoLimite))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addComponent(jLabel5))
                                            .addComponent(jLabel19))
                                        .addGap(120, 120, 120))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel6))
                                        .addGap(49, 49, 49)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(44, 44, 44)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Spn_limiteSofisticadas, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                .addComponent(Spn_limiteSImples)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ckBx_restringido)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(48, 48, 48)
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(ckBx_libre))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(spn_horas, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(spn_minutos, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(spn_segundos, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel19)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(Spn_numeroJUgadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Spn_DineroInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Spn_dineroPorVuelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Spn_cantidadDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Spn_limiteSImples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Spn_limiteSofisticadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Spn_interesHipoteca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rbtn_noHayTiempoLimite)
                    .addComponent(Rbtn_hayTiempoLimite)
                    .addComponent(jLabel10))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(spn_horas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spn_minutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spn_segundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckBx_restringido)
                    .addComponent(ckBx_libre))
                .addGap(31, 31, 31))
        );

        jLabel1.setFont(new java.awt.Font("Sawasdee", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(60, 36, 36));
        jLabel1.setText(" <<DEFINICIÓN DE LA PARTIDA>>");

        jLabel12.setBackground(new java.awt.Color(42, 26, 9));
        jLabel12.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(187, 211, 214));
        jPanel2.setPreferredSize(new java.awt.Dimension(485, 657));
        jPanel2.setLayout(null);

        jLabel14.setText("NUMERO FILAS");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(27, 111, 102, 18);

        jLabel15.setText("NUMERO COLUMNAS");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(27, 157, 147, 18);

        jLabel16.setText("NOMBRE DEL JUEGO");
        jPanel2.add(jLabel16);
        jLabel16.setBounds(27, 66, 146, 18);

        Spn_filas.setModel(new javax.swing.SpinnerNumberModel(5, 5, 9, 1));
        Spn_filas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Spn_filasStateChanged(evt);
            }
        });
        jPanel2.add(Spn_filas);
        Spn_filas.setBounds(255, 101, 98, 28);

        Spn_columnas.setModel(new javax.swing.SpinnerNumberModel(5, 5, 9, 1));
        Spn_columnas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Spn_columnasStateChanged(evt);
            }
        });
        jPanel2.add(Spn_columnas);
        Spn_columnas.setBounds(255, 152, 98, 28);

        jLabel18.setText("--TABLERO--");
        jPanel2.add(jLabel18);
        jLabel18.setBounds(27, 24, 89, 18);

        txtF_nombreJuego.setText("Aquí el nombre");
        jPanel2.add(txtF_nombreJuego);
        txtF_nombreJuego.setBounds(206, 61, 147, 28);

        JPn_panelCreacion.setBackground(new java.awt.Color(193, 200, 196));
        JPn_panelCreacion.setPreferredSize(new java.awt.Dimension(485, 657));
        JPn_panelCreacion.setLayout(null);

        btn_customizarMapa.setText("CUSTOMIZAR MAPA");
        btn_customizarMapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customizarMapaActionPerformed(evt);
            }
        });
        JPn_panelCreacion.add(btn_customizarMapa);
        btn_customizarMapa.setBounds(10, 20, 180, 60);

        btn_confirmarTrayectoria.setText(" LISTO?");
        btn_confirmarTrayectoria.setEnabled(false);
        btn_confirmarTrayectoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarTrayectoriaActionPerformed(evt);
            }
        });
        JPn_panelCreacion.add(btn_confirmarTrayectoria);
        btn_confirmarTrayectoria.setBounds(228, 22, 160, 60);

        JPn_panelEdicion.setBackground(new java.awt.Color(183, 192, 165));
        JPn_panelEdicion.setPreferredSize(new java.awt.Dimension(372, 657));
        JPn_panelEdicion.setLayout(null);

        btn_Jugar.setText("JUGAR");
        JPn_panelEdicion.add(btn_Jugar);
        btn_Jugar.setBounds(160, 20, 90, 60);

        btn_Editar.setText("EDITAR");
        btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditarActionPerformed(evt);
            }
        });
        JPn_panelEdicion.add(btn_Editar);
        btn_Editar.setBounds(10, 20, 140, 60);

        btn_Cancelar.setText("NO EDITAR");
        btn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelarActionPerformed(evt);
            }
        });
        JPn_panelEdicion.add(btn_Cancelar);
        btn_Cancelar.setBounds(260, 20, 130, 60);

        JPn_panelCreacion.add(JPn_panelEdicion);
        JPn_panelEdicion.setBounds(0, 0, 399, 106);

        JPn_Contenedor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        JPn_Contenedor.setPreferredSize(new java.awt.Dimension(1195, 876));

        javax.swing.GroupLayout JPn_ContenedorLayout = new javax.swing.GroupLayout(JPn_Contenedor);
        JPn_Contenedor.setLayout(JPn_ContenedorLayout);
        JPn_ContenedorLayout.setHorizontalGroup(
            JPn_ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 982, Short.MAX_VALUE)
        );
        JPn_ContenedorLayout.setVerticalGroup(
            JPn_ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText(" ");
        jMenuBar1.add(jMenu1);

        jMenu2.setText(" ");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JPn_panelCreacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(JPn_Contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPn_panelCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(JPn_Contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 958, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_confirmarTrayectoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarTrayectoriaActionPerformed
       if(logicaDeTablero.obtnerPrincipalCOstumizacion().hayCabosSueltos()){
           JOptionPane.showMessageDialog(null, "Te hace falta crear una cárcel", "Olvidaste...", JOptionPane.WARNING_MESSAGE);
       }else{
           btn_confirmarTrayectoria.setText("LISTO!!!");
           btn_confirmarTrayectoria.setEnabled(false);           
           //Aqupi se hace al llamdo al método que recorre la lista de casillas para deshabilitar a deshabilitar a todas y volverlars an blanco, lo cual será util para editar
           //el mpetodo para cb a la pantalla de juego, para antes mostrar la solicitud respectiva de los jugadores
           logicaDeTablero.obtnerPrincipalCOstumizacion().establecerMovimientos();
           logicaDeTablero.prepararCasillasParaJuego();
           jugadores= new Jugador[registroDatos.obtenerNumeroJugadores()];//recuerda que aquí se asignan de forma ordenada al arreglo, pero ya en la partida, se hace algo 
           //similar a lo de toma una tarjeta, es decir, se construirá un método que se encarge de distribuir a los jugadores de tal manera que estén asignador de manera aleatoria
           //y no como se vayan ingresando sus nombres, esto por medio de un método que se encarge de generar número con el rango según el tam del arr de jug y depe de si 
           //ya había generado ese número, pues entonces lo que hará será generar otro hasta que tenga a todos los jugadores barajeados xD
           //Aquí sería bueno que pusieras algo así como, preparando juego...
           for (int numeroJugadores = 0; numeroJugadores < jugadores.length; numeroJugadores++) {               
               dialogoSolicitudJugadores.reducirYReestablecerOpciones();
               dialogoSolicitudJugadores.setLocationRelativeTo(null);
               dialogoSolicitudJugadores.setVisible(true);
               jugadores[numeroJugadores]= new Jugador(dialogoSolicitudJugadores.retornarNombreJUgador().trim(), dialogoSolicitudJugadores.retornarColorEscogido(), (Integer)Spn_DineroInicial.getValue(),
                       logicaDeTablero.obtnerListaCircularRecorrido().obtnerInicio());//aqupi es donde le mando el inicio a jugador                       
           }
            
           registroDatos.recopilarJUgadores(jugadores);//quizá sería mejor que estuviera en el desarrollo de la partida, por el hecho de que ahí los recibiría en el orden de los turno, pero esto dependerá en gran manera, de como vayas a manejar los arch
           registroDatos.recopilarRecorrido(logicaDeTablero.obtnerListaCircularRecorrido());//te será útil para la edición
           registroDatos.recopilarRecorrdioFisico(logicaDeTablero.obtenerListaCasillasFIsicas());//Aquí envias la lista de casillas físicas
           
           ManejadorDeArchivos.escribirVersionOriginal();
           
           this.dispose();
           tablero = new Tablero(jugadores, logicaDeTablero.obtenerListaCasillasFIsicas(), 0);//también se deberá guardar el listado de las físicas, por el hecho de que la casilla circular no tiene exactamente el número de casilla en el que debe ir la info...aqunque si add este dato podría evitarte tener que guardarlo y hacer que tengas que emplear nada más el mismo métood que empleaste para crearlas y luego el métood que empleaste para colocarlas en la pantalla de juego, donde solamente les #dwshabilitaste" el echucha y las fuiste mostrando por medio de un for de tal maneta que se mostrasen en el orden en el cual se seleccionaron a la hora de crearlas
           tablero.setVisible(true);           
       }
       
    }//GEN-LAST:event_btn_confirmarTrayectoriaActionPerformed

    private void Rbtn_hayTiempoLimiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rbtn_hayTiempoLimiteActionPerformed
     
    }//GEN-LAST:event_Rbtn_hayTiempoLimiteActionPerformed

    private void ckBx_restringidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBx_restringidoActionPerformed
        if(ckBx_restringido.isSelected()){
            esRestringido=true;
            Verificacion.esModoLibre=false;
        }        
    }//GEN-LAST:event_ckBx_restringidoActionPerformed

    private void ckBx_libreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBx_libreActionPerformed
        if(ckBx_libre.isSelected()){
            esRestringido=false;//siempre que sea seleccionado, si no lo seleccionaran da igual, pues ya lleva su valor
            Verificacion.esModoLibre=true;//auque podrías establecerlo al final, para que o esté cambiando cada vez de valor, sino que obtenga el valor definitivo
        }
    }//GEN-LAST:event_ckBx_libreActionPerformed
                 
    private void btn_customizarMapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customizarMapaActionPerformed
        if((Integer)spn_horas.getValue()!=0 || (Integer)spn_minutos.getValue()!=0 || (Integer)spn_segundos.getValue()!=0){
            registroDatos.recopilarHorasRestantes((Integer)spn_horas.getValue());
            registroDatos.recopilarMinutosRestantes((Integer)spn_minutos.getValue());
            registroDatos.recopilarSegundosRestantes((Integer)spn_segundos.getValue());            
            registroDatos.recopilarTipoTiempo(1);
        }else{
            hayTiempoLimite=false;            
            registroDatos.recopilarTipoTiempo(2);
            //y con ello se utilizaría la clase reloj en luegar del temporizador
            
        }        
        
         registroDatos.recopilarEspecificacionesPartida(txtF_nombreJuego.getText().trim(),(Integer)Spn_filas.getValue(),(Integer)Spn_columnas.getValue(),
                 (Integer)Spn_numeroJUgadores.getValue(), (Integer)Spn_DineroInicial.getValue(), (Integer)Spn_dineroPorVuelta.getValue(), 
                 (Integer)Spn_cantidadDados.getValue(), (Integer)Spn_limiteSImples.getValue(), (Integer)Spn_limiteSofisticadas.getValue(), 
                 (Integer)Spn_interesHipoteca.getValue(), 100,hayTiempoLimite,  esRestringido );//El 100 es de la hipoteca general
        //recuerda que aún no verificas que tenga todos los campos llenos para habilitar este botón     

       manipularTodosLosCampos(false); 
       btn_confirmarTrayectoria.setEnabled(true);
        
        //verificacionDatos.asignarEsenciales((Integer)Spn_filas.getValue(), (Integer)Spn_columnas.getValue());//Esto para que cuando comience a asignar las casillas ya tenga con qué valores comparar
        //dialogo.setVisible(true);//esto ya está en la configuración de las casillas, como debe ser
        logicaDeTablero.generarCasillasConListaEnlazada((Integer)Spn_filas.getValue(), (Integer)Spn_columnas.getValue());
        logicaDeTablero.agregarCasillasDeListaAContenedor(null);
        
        //bueno te falta arreglar ese error y además llamar al registro desde la customizacion de propiedades para luego llamar a la tjt y así temrinar el llamado para crear la casilla lugar
    }//GEN-LAST:event_btn_customizarMapaActionPerformed

    private void Spn_filasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Spn_filasStateChanged
        if(estaEnEdicion){
            SolicitudDatos.registroDatos.reestablecerNumeroFilas((Integer)Spn_filas.getValue());
            //Aquí llamo al método para incre o decre el número de filas, lo cual dependerá de si el número nuevo es menor al ant que está guardado en registro
        }               
        
    }//GEN-LAST:event_Spn_filasStateChanged

    private void Rbtn_noHayTiempoLimiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rbtn_noHayTiempoLimiteActionPerformed
        hayTiempoLimite=false;//Esto siempre que esté seleccionado igual que todos los demás botones de selección
        if(Rbtn_noHayTiempoLimite.isSelected()){
           spn_horas.setEnabled(false);
           spn_minutos.setEnabled(false);
           spn_segundos.setEnabled(false);    
       }       
    }//GEN-LAST:event_Rbtn_noHayTiempoLimiteActionPerformed

    private void Rbtn_hayTiempoLimiteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Rbtn_hayTiempoLimiteItemStateChanged
       if(Rbtn_hayTiempoLimite.isSelected()){
           //aquí deberá habilitar el componente donde se ingrese el tiempo, solo que creo que deberá cb el componente actual,pues no se adecúa
           hayTiempoLimite=true;               
           spn_horas.setEnabled(true);
           spn_minutos.setEnabled(true);
           spn_segundos.setEnabled(true);    
           
           //aquí envias los datos individuales, para seguir con el conteo según la escogencia del user de tener o no tiempo límite
       }
    }//GEN-LAST:event_Rbtn_hayTiempoLimiteItemStateChanged

    private void ckBx_libreStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckBx_libreStateChanged
      
    }//GEN-LAST:event_ckBx_libreStateChanged

    private void btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EditarActionPerformed
        if(btn_Editar.getText().equalsIgnoreCase("Editar")){
            logicaDeTablero.reactivarListadoParaEdicion();
            manipularTodosLosCampos(true);
            logicaDeTablero.recibirRecorridoCIrcularCreado(registroDatos.ObtenerRecorridoLogico());//ya solo este hacía falta, puesto que en la pantalla principal se recibe el contenedor y el recorrido físicp
        
            ckBx_restringido.setEnabled(false);
            ckBx_libre.setEnabled(false);        
            btn_Editar.setText("GUARDAR TODO");
        }else{
            manipularTodosLosCampos(false);
            btn_Editar.setEnabled(false);
            btn_Cancelar.setEnabled(false);
            SolicitudDatos.registroDatos.recopilarDatosEdicion(txtF_nombreJuego.getText().trim(),(Integer)Spn_filas.getValue(),(Integer)Spn_columnas.getValue(),
                 (Integer)Spn_numeroJUgadores.getValue(), (Integer)Spn_DineroInicial.getValue(), (Integer)Spn_dineroPorVuelta.getValue(), 
                 (Integer)Spn_cantidadDados.getValue(), (Integer)Spn_limiteSImples.getValue(), (Integer)Spn_limiteSofisticadas.getValue(), 
                 (Integer)Spn_interesHipoteca.getValue(),(Integer)spn_horas.getValue(), (Integer)spn_minutos.getValue(), (Integer)spn_segundos.getValue() );
            ManejadorDeArchivos.escribirVersionOriginal();
            //aquí borraría el archivo del progreso anterior y crearía uno nuevo  ó reescribiría el archivo con los nuevos valores originales...
            //para el caso dejugar de nuevo tendŕia que hacer algo similar a lo segundo por el hehco de que debría leer el archivo de la versión original y mandat a guardar esto al archivo
            //De progreso y luego leer el archivo de progreso para jugar, ó simplemente leer el original, usar ese objeto de registro y cuando decida guardar entonces cha chan, solo que habría 
            // problemas con el hecho de que cierre despuésito de haber dicho que jugaría de nuevo porque se abriría con los datos de la partida que acababa de terminar... por eso sería mejor
            //leer, guardar y leer el del progreso
            
        }//luego dependiendo de que presione, se irá al tablero o se cerrará nada más esta ventana                
                
        
    }//GEN-LAST:event_btn_EditarActionPerformed

    private void btn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelarActionPerformed
         if(JOptionPane.showConfirmDialog(null, "Estas seguro de cancelar la edición??\nse perderá todo lo editado hasta ahora", "CANCELAR EDICIÓN", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            this.dispose();
         }
         
    }//GEN-LAST:event_btn_CancelarActionPerformed

    private void Spn_columnasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Spn_columnasStateChanged
        if(estaEnEdicion){            
            JPn_Contenedor.removeAll();
            
            if((Integer)Spn_columnas.getValue()>registroDatos.obtenerNumeroColumnas()){
               registroDatos.reestablecerNumeroColumnas((Integer)Spn_columnas.getValue());
               logicaDeTablero.agregarColumnas(registroDatos.obtenerNumeroColumnas());//pues con estos spinners siempre se add después de la última columna o fila
               
            }else{//es decir si es menor
               registroDatos.reestablecerNumeroColumnas((Integer)Spn_columnas.getValue());
                //aquí el método para reducción
            }
            
            logicaDeTablero.agregarCasillasDeListaAContenedor(null);
            
        }
    }//GEN-LAST:event_Spn_columnasStateChanged

    
  /*  private class ManejadorChckBx implements ItemListener{

        @Override
        public void itemStateChanged(ItemEvent evt) {
            
            if(evt.getSource()==ckBx_restringido){
                if(ckBx_restringido.isSelected()){
                     verificacionDatos.establecerModoJuego(false);//creo que el problema está aquí, porque el evento debería ser para cuando sea seleccionado
                }
                
            }
            if(evt.getSource()==ckBx_libre){
                if(ckBx_libre.isSelected()){
                     verificacionDatos.establecerModoJuego(true);//creo que el problema está aquí, porque el evento debería ser para cuando sea seleccionado
                }
                
                
                //no veo utilidad de poner el else, puesto que a este evt se accederá cuando se presione el botón de costumizar el mapa, lo cual hace que solo tenga que revisarse 1 vez, pues esta sele o no alguno o ambos están deselect
                //y si es así entonces no se muetra el tablero, aunque podrías habilitar el botón de costumización si todos están seleccionados, lo cual podía hacerse con un contador, exceptuando esto para los spiner
                //de filas y columnas puesto que no es fundamental
            }            
            
        }        
    }*/
    
    public void manipularTodosLosCampos(boolean estado){
        Rbtn_hayTiempoLimite.setEnabled(estado);
        Rbtn_noHayTiempoLimite.setEnabled(estado);
        Spn_DineroInicial.setEnabled(estado);
        Spn_cantidadDados.setEnabled(estado);
        Spn_columnas.setEnabled(estado);
        Spn_dineroPorVuelta.setEnabled(estado);
        Spn_filas.setEnabled(estado);
        Spn_interesHipoteca.setEnabled(estado);
        Spn_limiteSImples.setEnabled(estado);
        Spn_limiteSofisticadas.setEnabled(estado);
        Spn_numeroJUgadores.setEnabled(estado);
        ckBx_restringido.setEnabled(estado);
        ckBx_libre.setEnabled(estado);
        txtF_nombreJuego.setEnabled(estado);
        btn_customizarMapa.setEnabled(estado);
        btn_confirmarTrayectoria.setEnabled(estado);
        spn_horas.setEnabled(estado);
        spn_minutos.setEnabled(estado);
        spn_segundos.setEnabled(estado);
    }  
    
    public void establecerDatosPredefinidos(){       
        
        txtF_nombreJuego.setText(SolicitudDatos.registroDatos.obtenerNombreJuego());
        Spn_filas.setValue(SolicitudDatos.registroDatos.obtnerNumeroFilas());
        Spn_columnas.setValue(SolicitudDatos.registroDatos.obtenerNumeroColumnas());
        Spn_numeroJUgadores.setValue(SolicitudDatos.registroDatos.obtenerNumeroJugadores());
        Spn_DineroInicial.setValue(SolicitudDatos.registroDatos.obtenerDineroInicial());
        Spn_dineroPorVuelta.setValue(SolicitudDatos.registroDatos.obtenerDineroPorVuelta());
        Spn_cantidadDados.setValue(SolicitudDatos.registroDatos.obtenerNumeroDados());
        Spn_limiteSImples.setValue(SolicitudDatos.registroDatos.obtenerLimiteSimples());
        Spn_limiteSofisticadas.setValue(SolicitudDatos.registroDatos.obtenerLimiteSofisticadas());
        Spn_interesHipoteca.setValue(SolicitudDatos.registroDatos.obtnerInteres());
        spn_horas.setValue(SolicitudDatos.registroDatos.obtenerHorasIniciales());
        spn_minutos.setValue(SolicitudDatos.registroDatos.obtenerMinutosIniciales());
        spn_segundos.setValue(SolicitudDatos.registroDatos.obtenerSegundosIniciales());
    }
    
    public void prepararParaEdicion(boolean enEdicion){
        if(enEdicion){
            manipularTodosLosCampos(false);
            logicaDeTablero.agregarCasillasDeListaAContenedor(SolicitudDatos.registroDatos.ObtenerRecorridoFisico());
        }            
    }
    
    public static void prepararPanelEdicion(){
        JButton boton1 = (JButton) paneles[1].getComponent(0);
        JButton boton2 = (JButton) paneles[1].getComponent(1);
        
        boton1.setVisible(false);
        boton2.setVisible(false);
    }         
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPn_Contenedor;
    private javax.swing.JPanel JPn_panelCreacion;
    private javax.swing.JPanel JPn_panelEdicion;
    private javax.swing.JRadioButton Rbtn_hayTiempoLimite;
    private javax.swing.JRadioButton Rbtn_noHayTiempoLimite;
    private javax.swing.JSpinner Spn_DineroInicial;
    private javax.swing.JSpinner Spn_cantidadDados;
    private javax.swing.JSpinner Spn_columnas;
    private javax.swing.JSpinner Spn_dineroPorVuelta;
    private javax.swing.JSpinner Spn_filas;
    private javax.swing.JSpinner Spn_interesHipoteca;
    private javax.swing.JSpinner Spn_limiteSImples;
    private javax.swing.JSpinner Spn_limiteSofisticadas;
    private javax.swing.JSpinner Spn_numeroJUgadores;
    private javax.swing.ButtonGroup btnGoup_conOrientacion;
    private javax.swing.ButtonGroup btnGroup_conTiempo;
    private javax.swing.JButton btn_Cancelar;
    private javax.swing.JButton btn_Editar;
    private javax.swing.JButton btn_Jugar;
    private javax.swing.JButton btn_confirmarTrayectoria;
    private javax.swing.JButton btn_customizarMapa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JCheckBox ckBx_libre;
    private javax.swing.JCheckBox ckBx_restringido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSpinner spn_horas;
    private javax.swing.JSpinner spn_minutos;
    private javax.swing.JSpinner spn_segundos;
    private javax.swing.JTextField txtF_nombreJuego;
    // End of variables declaration//GEN-END:variables
}

//NOTAS MÍAS: 
/*En el caso que quieras redimensionar, las listas enlazadas serán muy útiles, puesto que no tendrás que estar refrescando, solo agregando las filas/columnas en la parte necesitada, podrías hacerlo de tal forma que llene donde no se
altere la forma del tablero original, o simplemente add al ini o al final, si escoges cualqueira de esos sería mejor al final, solo para seguir un estándar

Las listasENLAZADAS serán útiles en el tablero para
    -> editar después una partida antiggua
    -> editar una partida en exe, pero aquí se requerirá de los hilos

*RECUERDA:
    -> Add el método de commit, pues creo que por eso no cambia bien la dimensión de los arr, después de haber creado uno, porque si mal no he observado, solo lo hace cuando después de haber defi 1, se interactúa con el Spn
*/
